{"version":3,"file":"4.8163398ef718f515c2ea.hot-update.js","sources":["webpack:///components/BitcoinMonitor/BitcoinMonitor.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Display } from './Display';\r\nimport { BitcoinService } from '../../services/BitcoinService';\r\nimport { CurrencyService } from '../../services/CurrencyService';\r\nimport DocumentsFieldSet from './DocumentsFieldSet';\r\nimport DocumentInput from './DocumentInput';\r\nimport  ShowGraph  from './ShowGraph';\r\nconst bitcoinService = new BitcoinService();\r\nconst currencyService = new CurrencyService();\r\n\r\nconst mapToPrice = (currentPrice, previousPrice) => {\r\n    return {\r\n        code: currentPrice.code,\r\n        description: currentPrice.description,\r\n        currentRate: currentPrice.currentRate,\r\n        previousRate: previousPrice ? previousPrice.currentRate : 0\r\n    };\r\n};\r\n\r\nclass BitcoinMonitor extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            prices: {},\r\n            prices2: {},\r\n            ready: false,\r\n            currencies: []\r\n        };\r\n\r\n        this.handleOnRefresh = this.handleOnRefresh.bind(this);\r\n        this.loadBitcoinPriceIndex = this.loadBitcoinPriceIndex.bind(this);\r\n        this.loadBitcoinPriceIndex2 = this.loadBitcoinPriceIndex2.bind(this);\r\n        this.handleOnCurrencyChanged = this.handleOnCurrencyChanged.bind(this);\r\n        this.handleOnCurrencyChanged2 = this.handleOnCurrencyChanged2.bind(this);\r\n\r\n    }\r\n\r\n\r\n    handleOnRefresh() {\r\n        var _this = this;\r\n        if (this.state.prices.SELECTED) {\r\n\r\n            const currency = this.state.prices.SELECTED.code;\r\n            const getnameprice = this.state.prices.SELECTED.code;\r\n            this.setState({getnameprice: getnameprice})\r\n            bitcoinService\r\n                .getPrice(currency)\r\n                .then(price => {\r\n                    if (price) {\r\n                        this.loadBitcoinPriceIndex(price);\r\n                        setTimeout(function () {\r\n                            _this.handleOnRefresh();\r\n                        }, 15000);\r\n                    } else {\r\n                        this.loadBitcoinPriceIndex();\r\n                        setTimeout(function () {\r\n                            _this.handleOnRefresh();\r\n                        }, 15000);\r\n                    }\r\n                })\r\n                .catch(error => console.log(error.message));\r\n\r\n        } else {\r\n            this.loadBitcoinPriceIndex();\r\n            setTimeout(function () {\r\n                _this.handleOnRefresh();\r\n            }, 15000);\r\n        }\r\n        if (this.state.prices2.SELECTED) {\r\n\r\n            const currency = this.state.prices2.SELECTED.code;\r\n            const getnameprice2 = this.state.prices2.SELECTED.code;\r\n            this.setState({getnameprice2: getnameprice2})\r\n            bitcoinService\r\n                .getPrice(currency)\r\n                .then(price => {\r\n                    if (price) {\r\n                        this.loadBitcoinPriceIndex2(price);\r\n                        setTimeout(function () {\r\n                            _this.handleOnRefresh();\r\n                        }, 15000);\r\n                    } else {\r\n                        this.loadBitcoinPriceIndex2();\r\n                        setTimeout(function () {\r\n                            _this.handleOnRefresh();\r\n                        }, 15000);\r\n                    }\r\n                })\r\n                .catch(error => console.log(error.message));\r\n\r\n        } else {\r\n            this.loadBitcoinPriceIndex2();\r\n            setTimeout(function () {\r\n                _this.handleOnRefresh();\r\n            }, 15000);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    handleOnCurrencyChanged(event) {\r\n\r\n        const currency = event.target.value;\r\n\r\n        bitcoinService\r\n            .getPrice(currency)\r\n            .then(price => {\r\n                if (price) {\r\n                    this.setState(prevState => {\r\n                        const prices = prevState.prices;\r\n                        prices.SELECTED = mapToPrice(price[currency], prevState.prices[currency]);\r\n                        return { prices: prices };\r\n                    });\r\n                }\r\n            })\r\n            .catch(error => console.log(error.message));\r\n    }\r\n    handleOnCurrencyChanged2(event) {\r\n\r\n        const currency = event.target.value;\r\n\r\n        bitcoinService\r\n            .getPrice(currency)\r\n            .then(price => {\r\n                if (price) {\r\n                    this.setState(prevState => {\r\n                        const prices2 = prevState.prices2;\r\n                        prices2.SELECTED = mapToPrice(price[currency], prevState.prices2[currency]);\r\n                        return { prices2: prices2 };\r\n                    });\r\n                }\r\n            })\r\n            .catch(error => console.log(error.message));\r\n    }\r\n\r\n\r\n    loadBitcoinPriceIndex(additionalPrice) {\r\n        bitcoinService\r\n            .getPrices()\r\n            .then(prices => {\r\n                if (prices) {\r\n                    this.setState(prevState => {\r\n                        const newPrices = {\r\n                            EUR: mapToPrice(prices.EUR, prevState.prices.EUR),\r\n                            GBP: mapToPrice(prices.GBP, prevState.prices.GBP),\r\n                            USD: mapToPrice(prices.USD, prevState.prices.USD)\r\n                        };\r\n\r\n                        if (additionalPrice) {\r\n                            newPrices.SELECTED = mapToPrice(\r\n                                Object.values(additionalPrice)[0],\r\n                                prevState.prices.SELECTED);\r\n                        }\r\n\r\n                        return { prices: newPrices, ready: true };\r\n                    });\r\n                }\r\n            })\r\n            .catch(error => console.log(error.message));\r\n    }\r\n    loadBitcoinPriceIndex2(additionalPrice) {\r\n        bitcoinService\r\n            .getPrices()\r\n            .then(prices2 => {\r\n                if (prices2) {\r\n                    this.setState(prevState => {\r\n                        const newPrices2 = {\r\n                            EUR: mapToPrice(prices2.EUR, prevState.prices2.EUR),\r\n                            GBP: mapToPrice(prices2.GBP, prevState.prices2.GBP),\r\n                            USD: mapToPrice(prices2.USD, prevState.prices2.USD)\r\n                        };\r\n\r\n                        if (additionalPrice) {\r\n                            newPrices2.SELECTED = mapToPrice(\r\n                                Object.values(additionalPrice)[0],\r\n                                prevState.prices2.SELECTED);\r\n                        }\r\n\r\n                        return { prices2: newPrices2, ready: true };\r\n                    });\r\n                }\r\n            })\r\n            .catch(error => console.log(error.message));\r\n    }\r\n\r\n\r\n    loadSupportedCurrencies() {\r\n        this.setState(() => ({ currencies: currencyService.getSupportedCurrencies() }));\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.loadSupportedCurrencies();\r\n        this.loadBitcoinPriceIndex();\r\n        this.handleOnRefresh();\r\n    }\r\n\r\n\r\n    render() {\r\n        <link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"></link>\r\n\r\n        return (\r\n            this.state.ready === true &&\r\n            <div>\r\n                <link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"></link><br />\r\n\r\n                <div class=\"w3-cell-row\">\r\n\r\n                    <div class=\"w3-container  w3-cell\">\r\n\r\n                    <Display\r\n                    currencies={this.state.currencies}\r\n                    prices={this.state.prices}\r\n                    prices2={this.state.prices2}\r\n                    onCurrencyChanged={this.handleOnCurrencyChanged}\r\n                    onCurrencyChanged2={this.handleOnCurrencyChanged2} />\r\n                <link rel=\"shortcut icon\" href=\"favicon.ico\" type=\"image/x-icon\"></link>\r\n                <link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\"\r\n                    crossorigin=\"anonymous\"></link>\r\n                <div className=\" mt-5 text-center\">\r\n                    {/* <button className=\"btn btn-lg btn-refresh\" onClick={this.handleOnRefresh}>\r\n                        <i className=\"fa fa-refresh fa-lg\"></i>\r\n                    </button> */}\r\n                </div>\r\n                    </div>\r\n                    <div class=\"w3-container w3-cell\">\r\n                    <ShowGraph\r\n                        prices={this.state.prices}\r\n                        prices2={this.state.prices2}\r\n                        getnameprice={this.state.getnameprice}\r\n                        getnameprice2={this.state.getnameprice2} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport { BitcoinMonitor };\n\n\n// WEBPACK FOOTER //\n// components/BitcoinMonitor/BitcoinMonitor.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;;;AAGA;AAAA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;;;AACA;AAAA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;;;AAGA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;;;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;;;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AASA;;;;AA3NA;AACA;;;;;A","sourceRoot":""}