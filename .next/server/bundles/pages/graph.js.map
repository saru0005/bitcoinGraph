{"version":3,"file":"bundles\\pages\\graph.js","sources":["webpack:///webpack/bootstrap da85e61e93ec1da742bd","webpack:///components/BitcoinMonitor/BitcoinMonitor.js","webpack:///components/BitcoinMonitor/Display.js","webpack:///components/BitcoinMonitor/DocumentInput.js","webpack:///components/BitcoinMonitor/DocumentsFieldSet.js","webpack:///components/BitcoinMonitor/Indicator.js","webpack:///components/BitcoinMonitor/ShowGraph.js","webpack:///components/Header.js","webpack:///pages/graph.js","webpack:///services/BitcoinService.js","webpack:///services/CurrencyService.js","webpack:///./services/currencies.json","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"axios\"","webpack:///external \"dateformat\"","webpack:///external \"isomorphic-fetch\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"recharts\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap da85e61e93ec1da742bd","import React, { Component } from 'react';\r\nimport { Display } from './Display';\r\nimport { BitcoinService } from '../../services/BitcoinService';\r\nimport { CurrencyService } from '../../services/CurrencyService';\r\nimport DocumentsFieldSet from './DocumentsFieldSet';\r\nimport DocumentInput from './DocumentInput';\r\nimport  ShowGraph  from './ShowGraph';\r\nconst bitcoinService = new BitcoinService();\r\nconst currencyService = new CurrencyService();\r\n\r\nconst mapToPrice = (currentPrice, previousPrice) => {\r\n    return {\r\n        code: currentPrice.code,\r\n        description: currentPrice.description,\r\n        currentRate: currentPrice.currentRate,\r\n        previousRate: previousPrice ? previousPrice.currentRate : 0\r\n    };\r\n};\r\n\r\nclass BitcoinMonitor extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            prices: {},\r\n            prices2: {},\r\n            ready: false,\r\n            currencies: []\r\n        };\r\n\r\n        this.handleOnRefresh = this.handleOnRefresh.bind(this);\r\n        this.loadBitcoinPriceIndex = this.loadBitcoinPriceIndex.bind(this);\r\n        this.loadBitcoinPriceIndex2 = this.loadBitcoinPriceIndex2.bind(this);\r\n        this.handleOnCurrencyChanged = this.handleOnCurrencyChanged.bind(this);\r\n        this.handleOnCurrencyChanged2 = this.handleOnCurrencyChanged2.bind(this);\r\n\r\n    }\r\n\r\n\r\n    handleOnRefresh() {\r\n        var _this = this;\r\n        if (this.state.prices.SELECTED) {\r\n\r\n            const currency = this.state.prices.SELECTED.code;\r\n\r\n            bitcoinService\r\n                .getPrice(currency)\r\n                .then(price => {\r\n                    if (price) {\r\n                        this.loadBitcoinPriceIndex(price);\r\n                        setTimeout(function () {\r\n                            _this.handleOnRefresh();\r\n                        }, 5000);\r\n                    } else {\r\n                        this.loadBitcoinPriceIndex();\r\n                        setTimeout(function () {\r\n                            _this.handleOnRefresh();\r\n                        }, 5000);\r\n                    }\r\n                })\r\n                .catch(error => console.log(error.message));\r\n\r\n        } else {\r\n            this.loadBitcoinPriceIndex();\r\n            setTimeout(function () {\r\n                _this.handleOnRefresh();\r\n            }, 5000);\r\n        }\r\n        if (this.state.prices2.SELECTED) {\r\n\r\n            const currency = this.state.prices2.SELECTED.code;\r\n\r\n            bitcoinService\r\n                .getPrice(currency)\r\n                .then(price => {\r\n                    if (price) {\r\n                        this.loadBitcoinPriceIndex2(price);\r\n                        setTimeout(function () {\r\n                            _this.handleOnRefresh();\r\n                        }, 5000);\r\n                    } else {\r\n                        this.loadBitcoinPriceIndex2();\r\n                        setTimeout(function () {\r\n                            _this.handleOnRefresh();\r\n                        }, 5000);\r\n                    }\r\n                })\r\n                .catch(error => console.log(error.message));\r\n\r\n        } else {\r\n            this.loadBitcoinPriceIndex2();\r\n            setTimeout(function () {\r\n                _this.handleOnRefresh();\r\n            }, 5000);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    handleOnCurrencyChanged(event) {\r\n\r\n        const currency = event.target.value;\r\n\r\n        bitcoinService\r\n            .getPrice(currency)\r\n            .then(price => {\r\n                if (price) {\r\n                    this.setState(prevState => {\r\n                        const prices = prevState.prices;\r\n                        prices.SELECTED = mapToPrice(price[currency], prevState.prices[currency]);\r\n                        return { prices: prices };\r\n                    });\r\n                }\r\n            })\r\n            .catch(error => console.log(error.message));\r\n    }\r\n    handleOnCurrencyChanged2(event) {\r\n\r\n        const currency = event.target.value;\r\n\r\n        bitcoinService\r\n            .getPrice(currency)\r\n            .then(price => {\r\n                if (price) {\r\n                    this.setState(prevState => {\r\n                        const prices2 = prevState.prices2;\r\n                        prices2.SELECTED = mapToPrice(price[currency], prevState.prices2[currency]);\r\n                        return { prices2: prices2 };\r\n                    });\r\n                }\r\n            })\r\n            .catch(error => console.log(error.message));\r\n    }\r\n\r\n\r\n    loadBitcoinPriceIndex(additionalPrice) {\r\n        bitcoinService\r\n            .getPrices()\r\n            .then(prices => {\r\n                if (prices) {\r\n                    this.setState(prevState => {\r\n                        const newPrices = {\r\n                            EUR: mapToPrice(prices.EUR, prevState.prices.EUR),\r\n                            GBP: mapToPrice(prices.GBP, prevState.prices.GBP),\r\n                            USD: mapToPrice(prices.USD, prevState.prices.USD)\r\n                        };\r\n\r\n                        if (additionalPrice) {\r\n                            newPrices.SELECTED = mapToPrice(\r\n                                Object.values(additionalPrice)[0],\r\n                                prevState.prices.SELECTED);\r\n                        }\r\n\r\n                        return { prices: newPrices, ready: true };\r\n                    });\r\n                }\r\n            })\r\n            .catch(error => console.log(error.message));\r\n    }\r\n    loadBitcoinPriceIndex2(additionalPrice) {\r\n        bitcoinService\r\n            .getPrices()\r\n            .then(prices2 => {\r\n                if (prices2) {\r\n                    this.setState(prevState => {\r\n                        const newPrices2 = {\r\n                            EUR: mapToPrice(prices2.EUR, prevState.prices2.EUR),\r\n                            GBP: mapToPrice(prices2.GBP, prevState.prices2.GBP),\r\n                            USD: mapToPrice(prices2.USD, prevState.prices2.USD)\r\n                        };\r\n\r\n                        if (additionalPrice) {\r\n                            newPrices2.SELECTED = mapToPrice(\r\n                                Object.values(additionalPrice)[0],\r\n                                prevState.prices2.SELECTED);\r\n                        }\r\n\r\n                        return { prices2: newPrices2, ready: true };\r\n                    });\r\n                }\r\n            })\r\n            .catch(error => console.log(error.message));\r\n    }\r\n\r\n\r\n    loadSupportedCurrencies() {\r\n        this.setState(() => ({ currencies: currencyService.getSupportedCurrencies() }));\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.loadSupportedCurrencies();\r\n        this.loadBitcoinPriceIndex();\r\n        this.handleOnRefresh();\r\n    }\r\n\r\n\r\n    render() {\r\n        <link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"></link>\r\n\r\n        return (\r\n            this.state.ready === true &&\r\n            <div>\r\n                <link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"></link><br />\r\n\r\n                <div class=\"w3-cell-row\">\r\n\r\n                    <div class=\"w3-container  w3-cell\">\r\n\r\n                    <Display\r\n                    currencies={this.state.currencies}\r\n                    prices={this.state.prices}\r\n                    prices2={this.state.prices2}\r\n                    onCurrencyChanged={this.handleOnCurrencyChanged}\r\n                    onCurrencyChanged2={this.handleOnCurrencyChanged2} />\r\n                <link rel=\"shortcut icon\" href=\"favicon.ico\" type=\"image/x-icon\"></link>\r\n                <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css\" integrity=\"sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb\" crossorigin=\"anonymous\"></link>\r\n                <link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\"\r\n                    crossorigin=\"anonymous\"></link>\r\n                <div className=\" mt-5 text-center\">\r\n                    {/* <button className=\"btn btn-lg btn-refresh\" onClick={this.handleOnRefresh}>\r\n                        <i className=\"fa fa-refresh fa-lg\"></i>\r\n                    </button> */}\r\n                </div>\r\n                    </div>\r\n                    <div class=\"w3-container w3-cell\">\r\n                    <ShowGraph\r\n                        prices={this.state.prices}\r\n                        prices2={this.state.prices2} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport { BitcoinMonitor };\n\n\n// WEBPACK FOOTER //\n// components/BitcoinMonitor/BitcoinMonitor.js","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Indicator } from './Indicator';\r\n\r\nconst formatNumber = (number) => number.toFixed(4).toString().padEnd(11, '0');\r\n\r\nconst Display = (props) => (\r\n    <div>\r\n        <table className=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th className=\"text-uppercase text-center\"></th>\r\n                    <th className=\"text-uppercase \">Before</th>\r\n                    <th className=\"text-uppercase \">Current</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody className=\"table-body\">\r\n                <tr>\r\n                    <td >\r\n                        <i className=\"fa fa-usd fa-lg\">USD</i>\r\n                    </td>\r\n                    <td>\r\n                        {formatNumber(props.prices.USD.previousRate)}\r\n                    </td>\r\n                    <td>\r\n                        {formatNumber(props.prices.USD.currentRate)}\r\n                        <Indicator\r\n                            currentRate={props.prices.USD.currentRate}\r\n                            previousRate={props.prices.USD.previousRate} />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <i className=\"fa fa-gbp fa-lg\">GBP</i>\r\n                    </td>\r\n                    <td>\r\n                        {formatNumber(props.prices.GBP.previousRate)}\r\n                    </td>\r\n                    <td>\r\n                        {formatNumber(props.prices.GBP.currentRate)}\r\n                        <Indicator \r\n                            currentRate={props.prices.GBP.currentRate}\r\n                            previousRate={props.prices.GBP.previousRate} />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <i className=\"fa fa-eur fa-lg\">EUR</i>\r\n                    </td>\r\n                    <td>\r\n                        {formatNumber(props.prices.EUR.previousRate)}\r\n                    </td>\r\n                    <td>\r\n                        {formatNumber(props.prices.EUR.currentRate)}\r\n                        <Indicator\r\n                            currentRate={props.prices.EUR.currentRate}\r\n                            previousRate={props.prices.EUR.previousRate} />\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>\r\n                        <select\r\n                            name=\"currency\"\r\n                            id=\"currency\"\r\n                            className=\"currency form-control mx-auto\"\r\n                            onChange={props.onCurrencyChanged}>\r\n                            {\r\n                                props.currencies && props.currencies.map(currency => (\r\n                                    <option key={currency.currency} value={currency.currency}>\r\n                                        {currency.currency}\r\n                                    </option>\r\n                                ))\r\n                            }\r\n                        </select>\r\n                    </td>\r\n                    <td>\r\n                        {props.prices.SELECTED && formatNumber(props.prices.SELECTED.previousRate)}\r\n                    </td>\r\n                    <td>\r\n                        {\r\n                            props.prices.SELECTED &&\r\n                            <div>\r\n                                {formatNumber(props.prices.SELECTED.currentRate)}\r\n                                <Indicator\r\n                                    currentRate={props.prices.SELECTED.currentRate}\r\n                                    previousRate={props.prices.SELECTED.previousRate} />\r\n                            </div>\r\n                        }\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <select\r\n                            name=\"currency\"\r\n                            id=\"currency\"\r\n                            className=\"currency form-control mx-auto\"\r\n                            onChange={props.onCurrencyChanged2}>\r\n                            {\r\n                                props.currencies && props.currencies.map(currency => (\r\n                                    <option key={currency.currency} value={currency.currency}>\r\n                                        {currency.currency}\r\n                                    </option>\r\n                                ))\r\n                            }\r\n                        </select>\r\n                    </td>\r\n                    <td>\r\n                        {props.prices2.SELECTED && formatNumber(props.prices2.SELECTED.previousRate)}\r\n                    </td>\r\n                    <td>\r\n                        {\r\n                            props.prices2.SELECTED &&\r\n                            <div>\r\n                                {formatNumber(props.prices2.SELECTED.currentRate)}\r\n                                <Indicator\r\n                                    currentRate={props.prices2.SELECTED.currentRate}\r\n                                    previousRate={props.prices2.SELECTED.previousRate} />\r\n                            </div>\r\n                        }\r\n                    </td>\r\n                </tr>\r\n                \r\n            </tbody>\r\n        </table>\r\n    </div>\r\n);\r\n\r\nDisplay.propTypes = {\r\n    currencies: PropTypes.array,\r\n    prices: PropTypes.object,\r\n    onCurrencyChanged: PropTypes.func\r\n};\r\n\r\nexport { Display };\n\n\n// WEBPACK FOOTER //\n// components/BitcoinMonitor/Display.js","import React from 'react';\r\nclass DocumentInput extends React.Component {\r\n    render() {\r\n      return <input \r\n        type=\"file\" \r\n        name={ `document-${ this.props.index }-document` } \r\n      />;\r\n       <select\r\n       name=\"currency\"\r\n       id=\"currency\"\r\n       className=\"currency form-control mx-auto\"\r\n       onChange={props.onCurrencyChanged}>\r\n       {\r\n           props.currencies && props.currencies.map(currency => (\r\n               <option key={currency.currency} value={currency.currency}>\r\n                   {currency.currency}\r\n               </option>\r\n           ))\r\n       }\r\n   </select>\r\n    }\r\n  }\r\n  export default DocumentInput;\n\n\n// WEBPACK FOOTER //\n// components/BitcoinMonitor/DocumentInput.js","import React from 'react';\r\nimport DocumentInput from './DocumentInput';\r\nclass DocumentsFieldSet extends React.Component{\r\n    constructor(props){\r\n      super(props);\r\n  \r\n      this.state = { \r\n        documents: []\r\n      }\r\n      \r\n      this.add = this.add.bind(this);\r\n    }\r\n  \r\n    add() {\r\n      const documents = this.state.documents.concat(DocumentInput);\r\n      this.setState({ documents });\r\n    }\r\n    \r\n\r\n\r\n\r\n    \r\n    render () {\r\n      const documents = this.state.documents.map((Element, index) => {\r\n        return <Element key={ index } index={ index } />\r\n      });\r\n  \r\n      return <div>\r\n       \r\n      \r\n        <div className=\"inputs\">\r\n          { documents }<br/>\r\n        </div>\r\n        <button onClick={ this.add }>Add</button>\r\n      </div>\r\n    }\r\n  }\r\n  \r\n  export default DocumentsFieldSet;\n\n\n// WEBPACK FOOTER //\n// components/BitcoinMonitor/DocumentsFieldSet.js","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Indicator = (props) => {\r\n\r\n    let indicator = null;\r\n\r\n    if (props.currentRate > props.previousRate) {\r\n        indicator = <i className=\"fa fa-chevron-up text-success ml-2\"></i>;\r\n    } else if (props.currentRate < props.previousRate) {\r\n        indicator = <i className=\"fa fa-chevron-down text-danger ml-2\"></i>;\r\n    } else {\r\n        indicator = <i className=\"fa fa-minus text-secondary ml-2\"></i>;\r\n    }\r\n\r\n    return indicator;\r\n};\r\n\r\nIndicator.propTypes = {\r\n    currentRate: PropTypes.number,\r\n    previousRate: PropTypes.number\r\n};\r\n\r\nexport { Indicator };\n\n\n// WEBPACK FOOTER //\n// components/BitcoinMonitor/Indicator.js","import {\r\n    LineChart,\r\n    Line,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Label\r\n} from 'recharts'\r\nimport 'isomorphic-fetch'\r\nvar dateFormat = require('dateformat');\r\nclass Index extends React.Component {\r\n\r\n    static async getInitialProps() {\r\n        const url = \"https://api.coindesk.com/v1/bpi/currentprice.json\"\r\n        const res = await fetch(url)\r\n        const json = await res.json()\r\n        const result = {\r\n            key: dateFormat(new Date(), \"h:MM:ss TT\")\r\n        }\r\n        Object.keys(json.bpi).map((item) => {\r\n            result[item] = json.bpi[item].rate_float\r\n        })\r\n        return { bitcoin: result }\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            data: [this.props.bitcoin]\r\n        }\r\n        this.fetch = this.fetch.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        setInterval(() => {\r\n            this.fetch()\r\n        }, 5000)\r\n    }\r\n\r\n\r\n\r\n\r\n    async fetch() {\r\n        const result = {\r\n            key: dateFormat(new Date(), \"h:MM:ss TT\")\r\n        }\r\n        if(this.props.prices.SELECTED){\r\n            const getname = this.props.prices.SELECTED.code;\r\n            const url3 = \"https://api.coindesk.com/v1/bpi/currentprice/\" + getname + \".json\"\r\n            const resse2 = await fetch(url3)\r\n            const jsonne2 = await resse2.json()\r\n            Object.keys(jsonne2.bpi).map((item) => {\r\n                result[item] = jsonne2.bpi[item].rate_float\r\n            })\r\n            this.setState({\r\n                getname: getname\r\n            })\r\n            if(this.props.prices2.SELECTED){\r\n                const testget = this.props.prices2.SELECTED.code;\r\n                const url2 = \"https://api.coindesk.com/v1/bpi/currentprice/\" + testget + \".json\"\r\n                const resse = await fetch(url2)\r\n                const jsonne = await resse.json()\r\n                Object.keys(jsonne.bpi).map((item) => {\r\n                    result[item] = jsonne.bpi[item].rate_float\r\n                })\r\n                this.setState({\r\n                    testget: testget\r\n                })\r\n            }\r\n        }\r\n      \r\n     \r\n        const url = \"https://api.coindesk.com/v1/bpi/currentprice.json\"\r\n        const res = await fetch(url)\r\n        const json = await res.json()\r\n     \r\n\r\n\r\n        Object.keys(json.bpi).map((item) => {\r\n            result[item] = json.bpi[item].rate_float\r\n        })\r\n\r\n     \r\n\r\n        let { data } = this.state\r\n        data.push(result)\r\n        this.setState({\r\n            data: data\r\n        })\r\n    }\r\n\r\n    renderGrapgh() {\r\n\r\n        var { data, testget, getname } = this.state\r\n        var coin4 = 'Value.' + testget\r\n        var coin5 = 'Value.' + getname\r\n\r\n        console.log(\"render\", data)\r\n        console.log(\"มันออกมาเเล้วโว้ย\" + testget)\r\n        const Value = data.map((item) => {\r\n            return { Value: item }\r\n        }\r\n        );\r\n        console.log(\"Map\", Value)\r\n        return (\r\n            <div>\r\n                <LineChart width={1024} height={480} data={Value}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"Value.key\" padding={{ left: 30, right: 30 }} >\r\n                    </XAxis>\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Line type=\"monotone\" dataKey=\"Value.USD\" stroke=\"#8884d8\" activeDot={{ r: 5 }} />\r\n                    <Line type=\"monotone\" dataKey=\"Value.GBP\" stroke=\"#82ca9d\" activeDot={{ r: 5 }} />\r\n                    <Line type=\"monotone\" dataKey=\"Value.EUR\" stroke=\"#d82d36\" activeDot={{ r: 5 }} />\r\n                    <Line type=\"monotone\" dataKey={coin4} stroke=\"#ffff00\" activeDot={{ r: 5 }} />\r\n                    <Line type=\"monotone\" dataKey={coin5} stroke=\"#ff00ff\" activeDot={{ r: 5 }} />\r\n                </LineChart>\r\n            </div>\r\n        )\r\n    }\r\n    render() {\r\n        <link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"></link>\r\n        return (\r\n            <div>\r\n                <link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"></link><br />\r\n                <div class=\"w3-cell-row\">\r\n\r\n                    <div class=\"w3-container  w3-cell\">\r\n\r\n\r\n                    </div>\r\n                    <div class=\"w3-container w3-cell\">\r\n                        {this.renderGrapgh()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Index\n\n\n// WEBPACK FOOTER //\n// components/BitcoinMonitor/ShowGraph.js","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = (props) => (\r\n    <nav className=\"header navbar navbar-dark bg-dark\" style={{overflowX: 'hidden'}}>\r\n        <div className=\"text-center mx-auto\">            \r\n            <div className=\"\">\r\n                <i className=\"fa fa-btc fa-3x my-auto d-inline-block\" style={{color: '#FFC107'}}></i>\r\n                <div className=\"h3 ml-3 my-auto text-light d-inline-block\">{props.title}</div>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n);\r\n\r\nHeader.defaultProps = {\r\n    title: 'App'\r\n};\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string\r\n};\r\n\r\nexport { Header };\n\n\n// WEBPACK FOOTER //\n// components/Header.js","\r\nimport { BitcoinMonitor } from '../components/BitcoinMonitor/BitcoinMonitor';\r\nimport 'isomorphic-fetch'\r\nimport { Header } from '../components/Header';\r\nvar dateFormat = require('dateformat');\r\nclass graph extends React.Component {\r\n  render() {\r\n    <link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"></link>\r\n\r\n    return (\r\n      <div>\r\n               <Header title='Monitor' />\r\n               <link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"></link><br/>\r\n\r\n      <div class=\"w3-cell-row\">\r\n      \r\n         <div class=\"w3-container  w3-cell\">\r\n \r\n        <BitcoinMonitor />\r\n      </div>\r\n      <div class=\"w3-container w3-cell\">\r\n\r\n      </div>\r\n  </div>\r\n  </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default graph\n\n\n// WEBPACK FOOTER //\n// pages/graph.js","import axios from 'axios';\r\n\r\nconst mapToPrice = (bpiPrice) => {\r\n    return {\r\n        code: bpiPrice.code,\r\n        description: bpiPrice.description,\r\n        currentRate: bpiPrice.rate_float\r\n    };\r\n};\r\n\r\nconst BASE_URL = 'https://api.coindesk.com/v1/bpi';\r\n\r\nexport class BitcoinService {    \r\n    \r\n    getPrice(currency) {\r\n        return new Promise((resolve, reject) => {\r\n            axios\r\n                .get(`${BASE_URL}/currentprice/${currency}.json`)\r\n                .then(response => {\r\n                    if (response.data && response.data.bpi) {\r\n                        resolve({\r\n                            [currency]: mapToPrice(response.data.bpi[currency])\r\n                        });\r\n                    }\r\n                })\r\n                .catch(error => reject(error.message));\r\n        });\r\n    }    \r\n\r\n    getPrices() {\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(`${BASE_URL}/currentprice.json`)\r\n                .then(response => {\r\n                    if (response.data && response.data.bpi) {\r\n                        resolve({   \r\n                            EUR: mapToPrice(response.data.bpi.EUR),\r\n                            GBP: mapToPrice(response.data.bpi.GBP),\r\n                            USD: mapToPrice(response.data.bpi.USD)\r\n                        });\r\n                    } else {\r\n                        reject('No Bitcoin prices available');\r\n                    }\r\n                });\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// services/BitcoinService.js","const currencies  = require('./currencies');\r\n\r\nexport class CurrencyService {\r\n    \r\n    getSupportedCurrencies() {\r\n        return currencies;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// services/CurrencyService.js","module.exports = [{\"currency\":\"\",\"country\":\"\"},{\"currency\":\"AED\",\"country\":\"United Arab Emirates Dirham\"},{\"currency\":\"AFN\",\"country\":\"Afghan Afghani\"},{\"currency\":\"ALL\",\"country\":\"Albanian Lek\"},{\"currency\":\"AMD\",\"country\":\"Armenian Dram\"},{\"currency\":\"ANG\",\"country\":\"Netherlands Antillean Guilder\"},{\"currency\":\"AOA\",\"country\":\"Angolan Kwanza\"},{\"currency\":\"ARS\",\"country\":\"Argentine Peso\"},{\"currency\":\"AUD\",\"country\":\"Australian Dollar\"},{\"currency\":\"AWG\",\"country\":\"Aruban Florin\"},{\"currency\":\"AZN\",\"country\":\"Azerbaijani Manat\"},{\"currency\":\"BAM\",\"country\":\"Bosnia-Herzegovina Convertible Mark\"},{\"currency\":\"BBD\",\"country\":\"Barbadian Dollar\"},{\"currency\":\"BDT\",\"country\":\"Bangladeshi Taka\"},{\"currency\":\"BGN\",\"country\":\"Bulgarian Lev\"},{\"currency\":\"BHD\",\"country\":\"Bahraini Dinar\"},{\"currency\":\"BIF\",\"country\":\"Burundian Franc\"},{\"currency\":\"BMD\",\"country\":\"Bermudan Dollar\"},{\"currency\":\"BND\",\"country\":\"Brunei Dollar\"},{\"currency\":\"BOB\",\"country\":\"Bolivian Boliviano\"},{\"currency\":\"BRL\",\"country\":\"Brazilian Real\"},{\"currency\":\"BSD\",\"country\":\"Bahamian Dollar\"},{\"currency\":\"BTC\",\"country\":\"Bitcoin\"},{\"currency\":\"BTN\",\"country\":\"Bhutanese Ngultrum\"},{\"currency\":\"BWP\",\"country\":\"Botswanan Pula\"},{\"currency\":\"BYR\",\"country\":\"Belarusian Ruble\"},{\"currency\":\"BZD\",\"country\":\"Belize Dollar\"},{\"currency\":\"CAD\",\"country\":\"Canadian Dollar\"},{\"currency\":\"CDF\",\"country\":\"Congolese Franc\"},{\"currency\":\"CHF\",\"country\":\"Swiss Franc\"},{\"currency\":\"CLF\",\"country\":\"Chilean Unit of Account (UF)\"},{\"currency\":\"CLP\",\"country\":\"Chilean Peso\"},{\"currency\":\"CNY\",\"country\":\"Chinese Yuan\"},{\"currency\":\"COP\",\"country\":\"Colombian Peso\"},{\"currency\":\"CRC\",\"country\":\"Costa Rican Colón\"},{\"currency\":\"CUP\",\"country\":\"Cuban Peso\"},{\"currency\":\"CVE\",\"country\":\"Cape Verdean Escudo\"},{\"currency\":\"CZK\",\"country\":\"Czech Republic Koruna\"},{\"currency\":\"DJF\",\"country\":\"Djiboutian Franc\"},{\"currency\":\"DKK\",\"country\":\"Danish Krone\"},{\"currency\":\"DOP\",\"country\":\"Dominican Peso\"},{\"currency\":\"DZD\",\"country\":\"Algerian Dinar\"},{\"currency\":\"EEK\",\"country\":\"Estonian Kroon\"},{\"currency\":\"EGP\",\"country\":\"Egyptian Pound\"},{\"currency\":\"ERN\",\"country\":\"Eritrean Nnakfa\"},{\"currency\":\"ETB\",\"country\":\"Ethiopian Birr\"},{\"currency\":\"EUR\",\"country\":\"Euro\"},{\"currency\":\"FJD\",\"country\":\"Fijian Dollar\"},{\"currency\":\"FKP\",\"country\":\"Falkland Islands Pound\"},{\"currency\":\"GBP\",\"country\":\"British Pound Sterling\"},{\"currency\":\"GEL\",\"country\":\"Georgian Lari\"},{\"currency\":\"GHS\",\"country\":\"Ghanaian Cedi\"},{\"currency\":\"GIP\",\"country\":\"Gibraltar Pound\"},{\"currency\":\"GMD\",\"country\":\"Gambian Dalasi\"},{\"currency\":\"GNF\",\"country\":\"Guinean Franc\"},{\"currency\":\"GTQ\",\"country\":\"Guatemalan Quetzal\"},{\"currency\":\"GYD\",\"country\":\"Guyanaese Dollar\"},{\"currency\":\"HKD\",\"country\":\"Hong Kong Dollar\"},{\"currency\":\"HNL\",\"country\":\"Honduran Lempira\"},{\"currency\":\"HRK\",\"country\":\"Croatian Kuna\"},{\"currency\":\"HTG\",\"country\":\"Haitian Gourde\"},{\"currency\":\"HUF\",\"country\":\"Hungarian Forint\"},{\"currency\":\"IDR\",\"country\":\"Indonesian Rupiah\"},{\"currency\":\"ILS\",\"country\":\"Israeli New Sheqel\"},{\"currency\":\"INR\",\"country\":\"Indian Rupee\"},{\"currency\":\"IQD\",\"country\":\"Iraqi Dinar\"},{\"currency\":\"IRR\",\"country\":\"Iranian Rial\"},{\"currency\":\"ISK\",\"country\":\"Icelandic Króna\"},{\"currency\":\"JEP\",\"country\":\"Jersey Pound\"},{\"currency\":\"JMD\",\"country\":\"Jamaican Dollar\"},{\"currency\":\"JOD\",\"country\":\"Jordanian Dinar\"},{\"currency\":\"JPY\",\"country\":\"Japanese Yen\"},{\"currency\":\"KES\",\"country\":\"Kenyan Shilling\"},{\"currency\":\"KGS\",\"country\":\"Kyrgystani Som\"},{\"currency\":\"KHR\",\"country\":\"Cambodian Riel\"},{\"currency\":\"KMF\",\"country\":\"Comorian Franc\"},{\"currency\":\"KPW\",\"country\":\"North Korean Won\"},{\"currency\":\"KRW\",\"country\":\"South Korean Won\"},{\"currency\":\"KWD\",\"country\":\"Kuwaiti Dinar\"},{\"currency\":\"KYD\",\"country\":\"Cayman Islands Dollar\"},{\"currency\":\"KZT\",\"country\":\"Kazakhstani Tenge\"},{\"currency\":\"LAK\",\"country\":\"Laotian Kip\"},{\"currency\":\"LBP\",\"country\":\"Lebanese Pound\"},{\"currency\":\"LKR\",\"country\":\"Sri Lankan Rupee\"},{\"currency\":\"LRD\",\"country\":\"Liberian Dollar\"},{\"currency\":\"LSL\",\"country\":\"Lesotho Loti\"},{\"currency\":\"LTL\",\"country\":\"Lithuanian Litas\"},{\"currency\":\"LVL\",\"country\":\"Latvian Lats\"},{\"currency\":\"LYD\",\"country\":\"Libyan Dinar\"},{\"currency\":\"MAD\",\"country\":\"Moroccan Dirham\"},{\"currency\":\"MDL\",\"country\":\"Moldovan Leu\"},{\"currency\":\"MGA\",\"country\":\"Malagasy Ariary\"},{\"currency\":\"MKD\",\"country\":\"Macedonian Denar\"},{\"currency\":\"MMK\",\"country\":\"Myanma Kyat\"},{\"currency\":\"MNT\",\"country\":\"Mongolian Tugrik\"},{\"currency\":\"MOP\",\"country\":\"Macanese Pataca\"},{\"currency\":\"MRO\",\"country\":\"Mauritanian Ouguiya\"},{\"currency\":\"MTL\",\"country\":\"Maltese Lira\"},{\"currency\":\"MUR\",\"country\":\"Mauritian Rupee\"},{\"currency\":\"MVR\",\"country\":\"Maldivian Rufiyaa\"},{\"currency\":\"MWK\",\"country\":\"Malawian Kwacha\"},{\"currency\":\"MXN\",\"country\":\"Mexican Peso\"},{\"currency\":\"MYR\",\"country\":\"Malaysian Ringgit\"},{\"currency\":\"MZN\",\"country\":\"Mozambican Metical\"},{\"currency\":\"NAD\",\"country\":\"Namibian Dollar\"},{\"currency\":\"NGN\",\"country\":\"Nigerian Naira\"},{\"currency\":\"NIO\",\"country\":\"Nicaraguan Córdoba\"},{\"currency\":\"NOK\",\"country\":\"Norwegian Krone\"},{\"currency\":\"NPR\",\"country\":\"Nepalese Rupee\"},{\"currency\":\"NZD\",\"country\":\"New Zealand Dollar\"},{\"currency\":\"OMR\",\"country\":\"Omani Rial\"},{\"currency\":\"PAB\",\"country\":\"Panamanian Balboa\"},{\"currency\":\"PEN\",\"country\":\"Peruvian Nuevo Sol\"},{\"currency\":\"PGK\",\"country\":\"Papua New Guinean Kina\"},{\"currency\":\"PHP\",\"country\":\"Philippine Peso\"},{\"currency\":\"PKR\",\"country\":\"Pakistani Rupee\"},{\"currency\":\"PLN\",\"country\":\"Polish Zloty\"},{\"currency\":\"PYG\",\"country\":\"Paraguayan Guarani\"},{\"currency\":\"QAR\",\"country\":\"Qatari Rial\"},{\"currency\":\"RON\",\"country\":\"Romanian Leu\"},{\"currency\":\"RSD\",\"country\":\"Serbian Dinar\"},{\"currency\":\"RUB\",\"country\":\"Russian Ruble\"},{\"currency\":\"RWF\",\"country\":\"Rwandan Franc\"},{\"currency\":\"SAR\",\"country\":\"Saudi Riyal\"},{\"currency\":\"SBD\",\"country\":\"Solomon Islands Dollar\"},{\"currency\":\"SCR\",\"country\":\"Seychellois Rupee\"},{\"currency\":\"SDG\",\"country\":\"Sudanese Pound\"},{\"currency\":\"SEK\",\"country\":\"Swedish Krona\"},{\"currency\":\"SGD\",\"country\":\"Singapore Dollar\"},{\"currency\":\"SHP\",\"country\":\"Saint Helena Pound\"},{\"currency\":\"SLL\",\"country\":\"Sierra Leonean Leone\"},{\"currency\":\"SOS\",\"country\":\"Somali Shilling\"},{\"currency\":\"SRD\",\"country\":\"Surinamese Dollar\"},{\"currency\":\"STD\",\"country\":\"São Tomé and Príncipe Dobra\"},{\"currency\":\"SVC\",\"country\":\"Salvadoran Colón\"},{\"currency\":\"SYP\",\"country\":\"Syrian Pound\"},{\"currency\":\"SZL\",\"country\":\"Swazi Lilangeni\"},{\"currency\":\"THB\",\"country\":\"Thai Baht\"},{\"currency\":\"TJS\",\"country\":\"Tajikistani Somoni\"},{\"currency\":\"TMT\",\"country\":\"Turkmenistani Manat\"},{\"currency\":\"TND\",\"country\":\"Tunisian Dinar\"},{\"currency\":\"TOP\",\"country\":\"Tongan Pa?anga\"},{\"currency\":\"TRY\",\"country\":\"Turkish Lira\"},{\"currency\":\"TTD\",\"country\":\"Trinidad and Tobago Dollar\"},{\"currency\":\"TWD\",\"country\":\"New Taiwan Dollar\"},{\"currency\":\"TZS\",\"country\":\"Tanzanian Shilling\"},{\"currency\":\"UAH\",\"country\":\"Ukrainian Hryvnia\"},{\"currency\":\"UGX\",\"country\":\"Ugandan Shilling\"},{\"currency\":\"USD\",\"country\":\"United States Dollar\"},{\"currency\":\"UYU\",\"country\":\"Uruguayan Peso\"},{\"currency\":\"UZS\",\"country\":\"Uzbekistan Som\"},{\"currency\":\"VEF\",\"country\":\"Venezuelan Bolívar Fuerte\"},{\"currency\":\"VND\",\"country\":\"Vietnamese Dong\"},{\"currency\":\"VUV\",\"country\":\"Vanuatu Vatu\"},{\"currency\":\"WST\",\"country\":\"Samoan Tala\"},{\"currency\":\"XAF\",\"country\":\"CFA Franc BEAC\"},{\"currency\":\"XAG\",\"country\":\"Silver (troy ounce)\"},{\"currency\":\"XAU\",\"country\":\"Gold (troy ounce)\"},{\"currency\":\"XBT\",\"country\":\"Bitcoin\"},{\"currency\":\"XCD\",\"country\":\"East Caribbean Dollar\"},{\"currency\":\"XDR\",\"country\":\"Special Drawing Rights\"},{\"currency\":\"XOF\",\"country\":\"CFA Franc BCEAO\"},{\"currency\":\"XPF\",\"country\":\"CFP Franc\"},{\"currency\":\"YER\",\"country\":\"Yemeni Rial\"},{\"currency\":\"ZAR\",\"country\":\"South African Rand\"},{\"currency\":\"ZMK\",\"country\":\"Zambian Kwacha (pre-2013)\"},{\"currency\":\"ZMW\",\"country\":\"Zambian Kwacha\"},{\"currency\":\"ZWL\",\"country\":\"Zimbabwean Dollar\"}]\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./services/currencies.json\n// module id = ./services/currencies.json\n// module chunks = 3","module.exports = require(\"@babel/runtime/regenerator\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@babel/runtime/regenerator\"\n// module id = @babel/runtime/regenerator\n// module chunks = 3","module.exports = require(\"axios\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"axios\"\n// module id = axios\n// module chunks = 3","module.exports = require(\"dateformat\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"dateformat\"\n// module id = dateformat\n// module chunks = 3","module.exports = require(\"isomorphic-fetch\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"isomorphic-fetch\"\n// module id = isomorphic-fetch\n// module chunks = 3","module.exports = require(\"prop-types\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"prop-types\"\n// module id = prop-types\n// module chunks = 3","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = react\n// module chunks = 3","module.exports = require(\"recharts\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"recharts\"\n// module id = recharts\n// module chunks = 3"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAEA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;;;AAGA;AAAA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;;;AACA;AAAA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;;;AAGA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;;;AACA;AAAA;AACA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","sourceRoot":""}